@using Hozor.DomainClasses.Public
@model Hozor.ViewModels.Public.CreateRoleViewModel

@{
    ViewData["Title"] = "افزودن گروه كاربری";
    var controllers = (IEnumerable<CMvcControllerInfo>)ViewData["Controllers"];
    int i = 0, j = 0;
}

@section Header {
    <link href="~/Content/jquery.bonsai.css" rel="stylesheet" />
}



<section class="panel">
    <header class="panel-heading">
        افزودن گروه كاربري
    </header>
    <div class="panel-body">

        <form asp-action="Create" class="form-horizontal">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <fieldset>
                <div class="form-group">
                    <label asp-for="Name" class="control-label col-md-2">نام گروه كاربري</label>
                    <div class="col-md-4">
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-2 control-label">ليست دسترسي ها</label>
                    <div class="col-md-10">
                        <ol id="tree">
                            @foreach (var controller in controllers)
                            {
                                string name;
                                {
                                    name = string.IsNullOrWhiteSpace(controller.DisplayName) ? controller.Name : controller.DisplayName;
                                }
                                <li class="controller" data-value="@controller.Name">
                                    .  @name
                                    @if (controller.Actions.Any())
                                    {
                                        <ul>
                                            @foreach (var action in controller.Actions)
                                            {
                                                {
                                                    name = string.IsNullOrWhiteSpace(action.DisplayName) ? action.Name : action.DisplayName;
                                                }
                                                <li data-value="@action.Name">.  @name</li>
                                                j++;
                                            }
                                        </ul>
                                    }
                                    @{ j = 0; }
                                </li>
                                i++;
                            }
                        </ol>

                    </div>
                </div>

                <div id="buttons">
                    <div class="col-md-2">
                    </div>
                    <div class="col-md-4">
                        <input type="submit" class="btn btn-primary" value="ثبت" />
                        @Html.ActionLink("بازگشت به فهرست", "Index")
                    </div>
                </div>
            </fieldset>

        </form>
    </div>
</section>




@section Scripts {
    <script src="~/Scripts/jquery.bonsai.js"></script>
    <script>
        $(function () {
            $('#tree').bonsai({
                expandAll: false,
                checkboxes: true,
                createInputs: 'checkbox'
            });

            $('form').submit(function () {
                var i = 0, j = 0;
                $('.controller > input[type="checkbox"]:checked, .controller > input[type="checkbox"]:indeterminate').each(function () {
                    var controller = $(this);
                    if ($(controller).prop('indeterminate')) {
                        $(controller).prop("checked", true);
                    }
                    var controllerName = 'SelectedControllers[' + i + ']';
                    $(controller).prop('name', controllerName + '.Name');

                    var area = $(controller).next().next();
                    $(area).prop('name', controllerName + '.AreaName');

                    $('ul > li > input[type="checkbox"]:checked', $(controller).parent()).each(function () {
                        var action = $(this);
                        var actionName = controllerName + '.Actions[' + j + '].Name';
                        $(action).prop('name', actionName);
                        j++;
                    });
                    j = 0;
                    i++;
                });

                return true;
            });
        });</script>
}
